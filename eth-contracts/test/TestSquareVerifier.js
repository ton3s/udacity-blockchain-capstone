// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('Verifier');
const proof = require('../../zokrates/code/square/proof.json');

contract('Verifier', accounts => {

  beforeEach(async function () { 
    this.contract = await Verifier.new();
  });

  // Test verification with correct proof
  // - use the contents from proof.json generated from zokrates steps
  it('Test verification with correct proof', async function () {
    let result = await this.contract.verifyTx(proof.proof, proof.inputs, { from: accounts[0] })
    assert.equal(result, true, "Error: Verification should return true")    
  })

  // Test verification with incorrect proof
  it('Test verification with incorrect proof', async function () {
    const incorrectInputs = [5, 5];
    let result = await this.contract.verifyTx(proof.proof, incorrectInputs, { from: accounts[0] })
    assert.equal(result, false, "Error: Verification should return false")    
  })

});


