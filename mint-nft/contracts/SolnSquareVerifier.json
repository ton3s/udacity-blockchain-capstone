{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x1763e40259fa6102141daa9181bd7fb4dbb445508287955040d8fa587efbc9d0\",\"urls\":[\"bzz-raw://7718902eed052c142a03441a451f1a9818a26d3c95e5e401395109204843a841\",\"dweb:/ipfs/QmZcC1wWd9kuhCBoYP27WRuqoCj2W6ayiyQ5N3Qpb2ckPc\"]},\"/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x35f6b59980deb07ac06f63c2bad0511b88d1f6e7f3d0d9c09db973086ff17e8e\",\"urls\":[\"bzz-raw://aefdec1d2e72a9b3e289cda625a53dcf679d9bcfea0b9d341026d80a3a914b85\",\"dweb:/ipfs/QmUvX1YLmHsXs3Q8bgVViZBAvWHgfokyPaFKDtQkrjGWdf\"]},\"/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/verifier.sol\":{\"keccak256\":\"0xb5f1954545e898b8dfa5e4e77fe5ccf3c82ccf74f76c8f6576812eaf471ae4e4\",\"urls\":[\"bzz-raw://11c6c0432a0a471d2138bf243c4fc2b1bb55de53621781c03c0418e25bbbac03\",\"dweb:/ipfs/QmbAABDeKmQ9d9H7JJBauxx5y62rFAre9Vo75BU8o4jXSj\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003cb638038062003cb6833981810160405262000037919081019062000432565b6040518060400160405280600981526020017f546f6e6573204e465400000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f544f4e45530000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162003c77603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a360008060146101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa60405160405180910390a2620001ee6301ffc9a760e01b620002cc60201b60201c565b620002066380ac58cd60e01b620002cc60201b60201c565b6200021e63780e9d6360e01b620002cc60201b60201c565b82600f9080519060200190620002369291906200036c565b5081601090805190602001906200024f9291906200036c565b508060119080519060200190620002689291906200036c565b5062000281635b5e139f60e01b620002cc60201b60201c565b50505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620004ac565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200030057600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003af57805160ff1916838001178555620003e0565b82800160010185558215620003e0579182015b82811115620003df578251825591602001919060010190620003c2565b5b509050620003ef9190620003f3565b5090565b6200041891905b8082111562000414576000816000905550600101620003fa565b5090565b90565b6000815190506200042c8162000492565b92915050565b6000602082840312156200044557600080fd5b600062000455848285016200041b565b91505092915050565b60006200046b8262000472565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200049d816200045e565b8114620004a957600080fd5b50565b6137bb80620004bc6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806340c10f19116100de5780638da5cb5b11610097578063bdc32be011610071578063bdc32be014610458578063c87b56dd14610476578063e985e9c5146104a6578063f2fde38b146104d657610173565b80638da5cb5b14610402578063a22cb46514610420578063b88d4fde1461043c57610173565b806340c10f191461030a57806342842e0e1461033a5780634f6ccce7146103565780636352211e1461038657806370a08231146103b657806374690502146103e657610173565b806318160ddd1161013057806318160ddd1461024c5780631fd960da1461026a57806323b872dd1461028657806327dc297e146102a25780632f745c59146102be57806338bbfa50146102ee57610173565b806301ffc9a714610178578063081812fc146101a8578063095ea7b3146101d857806315070401146101f457806316c38b3c1461021257806317d7de7c1461022e575b600080fd5b610192600480360361018d9190810190612c2a565b6104f2565b60405161019f91906132da565b60405180910390f35b6101c260048036036101bd9190810190612c7c565b61055a565b6040516101cf919061324a565b60405180910390f35b6101f260048036036101ed9190810190612a15565b610597565b005b6101fc610715565b60405161020991906132f5565b60405180910390f35b61022c60048036036102279190810190612b05565b6107b7565b005b610236610914565b60405161024391906132f5565b60405180910390f35b6102546109b6565b6040516102619190613442565b60405180910390f35b610284600480360361027f9190810190612aa0565b6109c3565b005b6102a0600480360361029b919081019061290f565b610ba0565b005b6102bc60048036036102b79190810190612b57565b610bc3565b005b6102d860048036036102d39190810190612a15565b610c06565b6040516102e59190613442565b60405180910390f35b61030860048036036103039190810190612bab565b610c79565b005b610324600480360361031f9190810190612a15565b610c7e565b60405161033191906132da565b60405180910390f35b610354600480360361034f919081019061290f565b610d2c565b005b610370600480360361036b9190810190612c7c565b610d4c565b60405161037d9190613442565b60405180910390f35b6103a0600480360361039b9190810190612c7c565b610d80565b6040516103ad919061324a565b60405180910390f35b6103d060048036036103cb91908101906128aa565b610dbd565b6040516103dd9190613442565b60405180910390f35b61040060048036036103fb9190810190612a51565b610e0d565b005b61040a610f73565b604051610417919061324a565b60405180910390f35b61043a600480360361043591908101906129d9565b610f9c565b005b6104566004803603610451919081019061295e565b6110d2565b005b6104606110f8565b60405161046d91906132f5565b60405180910390f35b610490600480360361048b9190810190612c7c565b61119a565b60405161049d91906132f5565b60405180910390f35b6104c060048036036104bb91908101906128d3565b611261565b6040516104cd91906132da565b60405180910390f35b6104f060048036036104eb91908101906128aa565b6112f5565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105a282610d80565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90613397565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061065a5750600115156106568233611261565b1515145b61066357600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ad5780601f10610782576101008083540402835291602001916107ad565b820191906000526020600020905b81548152906001019060200180831161079057829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90613337565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff16156108b9573373ffffffffffffffffffffffffffffffffffffffff167f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25860405160405180910390a25b600060149054906101000a900460ff16610911573373ffffffffffffffffffffffffffffffffffffffff167f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa60405160405180910390a25b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b5050505050905090565b6000600880549050905090565b60008484836040516020016109da9392919061320d565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8e906133f7565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610af4929190613417565b60206040518083038186803b158015610b0c57600080fd5b505afa158015610b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b449190810190612b2e565b610b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7a906133d7565b60405180910390fd5b610b8e858583610e0d565b610b988585610c7e565b505050505050565b610baa338261147c565b610bb357600080fd5b610bbe838383611511565b505050565b610c02828260006040519080825280601f01601f191660200182016040528015610bfc5781602001600182028038833980820191505090505b50610c79565b5050565b6000610c1183610dbd565b8210610c1c57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c6657fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0690613337565b60405180910390fd5b610d198383611535565b610d2282611556565b6001905092915050565b610d47838383604051806020016040528060008152506110d2565b505050565b6000610d566109b6565b8210610d6157600080fd5b60088281548110610d6e57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610e06600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061163e565b9050919050565b610e1561248d565b60405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481525090506014819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505050806015600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507f3a01cc868bdb36c1d9b8a262a8ad25064b23ac175b3f8e4453f1daf8ff6bac0d81600001518260200151604051610f659291906132b1565b60405180910390a150505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fd557600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110c691906132da565b60405180910390a35050565b6110dd848484610ba0565b6110e98484848461164c565b6110f257600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111905780601f1061116557610100808354040283529160200191611190565b820191906000526020600020905b81548152906001019060200180831161117357829003601f168201915b5050505050905090565b60606111a582611763565b6111ae57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112555780601f1061122a57610100808354040283529160200191611255565b820191906000526020600020905b81548152906001019060200180831161123857829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137b90613337565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113be57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a350565b60008061148883610d80565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806114f757508373ffffffffffffffffffffffffffffffffffffffff166114df8461055a565b73ffffffffffffffffffffffffffffffffffffffff16145b8061150857506115078185611261565b5b91505092915050565b61151c8383836117d5565b6115268382611a0a565b6115308282611ba8565b505050565b61153f8282611c6f565b6115498282611ba8565b61155281611e27565b5050565b61155f81611763565b61156857600080fd5b61161460118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116015780601f106115d657610100808354040283529160200191611601565b820191906000526020600020905b8154815290600101906020018083116115e457829003601f168201915b505050505061160f83611e73565b611fa0565b60126000838152602001908152602001600020908051906020019061163a9291906124bd565b5050565b600081600001549050919050565b600061166d8473ffffffffffffffffffffffffffffffffffffffff16611fe4565b61167a576001905061175b565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016116bb9493929190613265565b602060405180830381600087803b1580156116d557600080fd5b505af11580156116e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061170d9190810190612c53565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006117e082610d80565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611847906133b7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b790613317565b60405180910390fd5b6118c98261202f565b611910600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120ed565b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119a9600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612110565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000611a626001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061212690919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611b4f576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611acf57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b2757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611ba1919061253d565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60001515611c7c82611763565b151514611cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb590613357565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2590613377565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611dc7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612110565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611ebb576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611f9b565b600082905060005b60008214611ee5578080600101915050600a8281611edd57fe5b049150611ec3565b6060816040519080825280601f01601f191660200182016040528015611f1a5781602001600182028038833980820191505090505b50905060006001830390505b60008614611f9357600a8681611f3857fe5b0660300160f81b82828060019003935081518110611f5257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611f8b57fe5b049550611f26565b819450505050505b919050565b6060611fdc8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612170565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561202657506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120ea5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6121056001826000015461212690919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061216883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612432565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156121cc5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612251578881815181106121f857fe5b602001015160f81c60f81b83838060010194508151811061221557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121e3565b600090505b87518110156122c45787818151811061226b57fe5b602001015160f81c60f81b83838060010194508151811061228857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612256565b600090505b8651811015612337578681815181106122de57fe5b602001015160f81c60f81b8383806001019450815181106122fb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122c9565b600090505b85518110156123aa5785818151811061235157fe5b602001015160f81c60f81b83838060010194508151811061236e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061233c565b600090505b845181101561241d578481815181106123c457fe5b602001015160f81c60f81b8383806001019450815181106123e157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123af565b82995050505050505050505095945050505050565b600083831115829061247a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161247191906132f5565b60405180910390fd5b5060008385039050809150509392505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124fe57805160ff191683800117855561252c565b8280016001018555821561252c579182015b8281111561252b578251825591602001919060010190612510565b5b5090506125399190612569565b5090565b815481835581811115612564578183600052602060002091820191016125639190612569565b5b505050565b61258b91905b8082111561258757600081600090555060010161256f565b5090565b90565b60008135905061259d81613705565b92915050565b600082601f8301126125b457600080fd5b60026125c76125c28261348a565b61345d565b915081838560208402820111156125dd57600080fd5b60005b8381101561260d57816125f38882612895565b8452602084019350602083019250506001810190506125e0565b5050505092915050565b600082601f83011261262857600080fd5b600261263b612636826134ac565b61345d565b9150818385602084028201111561265157600080fd5b60005b8381101561268157816126678882612895565b845260208401935060208301925050600181019050612654565b5050505092915050565b60008135905061269a8161371c565b92915050565b6000815190506126af8161371c565b92915050565b6000813590506126c481613733565b92915050565b6000813590506126d98161374a565b92915050565b6000815190506126ee8161374a565b92915050565b600082601f83011261270557600080fd5b8135612718612713826134ce565b61345d565b9150808252602083016020830185838301111561273457600080fd5b61273f838284613677565b50505092915050565b600082601f83011261275957600080fd5b813561276c612767826134fa565b61345d565b9150808252602083016020830185838301111561278857600080fd5b612793838284613677565b50505092915050565b6000604082840312156127ae57600080fd5b6127b8604061345d565b905060006127c884828501612895565b60008301525060206127dc84828501612895565b60208301525092915050565b6000608082840312156127fa57600080fd5b612804604061345d565b90506000612814848285016125a3565b6000830152506040612828848285016125a3565b60208301525092915050565b6000610100828403121561284757600080fd5b612851606061345d565b905060006128618482850161279c565b6000830152506040612875848285016127e8565b60208301525060c06128898482850161279c565b60408301525092915050565b6000813590506128a481613761565b92915050565b6000602082840312156128bc57600080fd5b60006128ca8482850161258e565b91505092915050565b600080604083850312156128e657600080fd5b60006128f48582860161258e565b92505060206129058582860161258e565b9150509250929050565b60008060006060848603121561292457600080fd5b60006129328682870161258e565b93505060206129438682870161258e565b925050604061295486828701612895565b9150509250925092565b6000806000806080858703121561297457600080fd5b60006129828782880161258e565b94505060206129938782880161258e565b93505060406129a487828801612895565b925050606085013567ffffffffffffffff8111156129c157600080fd5b6129cd878288016126f4565b91505092959194509250565b600080604083850312156129ec57600080fd5b60006129fa8582860161258e565b9250506020612a0b8582860161268b565b9150509250929050565b60008060408385031215612a2857600080fd5b6000612a368582860161258e565b9250506020612a4785828601612895565b9150509250929050565b600080600060608486031215612a6657600080fd5b6000612a748682870161258e565b9350506020612a8586828701612895565b9250506040612a96868287016126b5565b9150509250925092565b6000806000806101808587031215612ab757600080fd5b6000612ac58782880161258e565b9450506020612ad687828801612895565b9350506040612ae787828801612834565b925050610140612af987828801612617565b91505092959194509250565b600060208284031215612b1757600080fd5b6000612b258482850161268b565b91505092915050565b600060208284031215612b4057600080fd5b6000612b4e848285016126a0565b91505092915050565b60008060408385031215612b6a57600080fd5b6000612b78858286016126b5565b925050602083013567ffffffffffffffff811115612b9557600080fd5b612ba185828601612748565b9150509250929050565b600080600060608486031215612bc057600080fd5b6000612bce868287016126b5565b935050602084013567ffffffffffffffff811115612beb57600080fd5b612bf786828701612748565b925050604084013567ffffffffffffffff811115612c1457600080fd5b612c20868287016126f4565b9150509250925092565b600060208284031215612c3c57600080fd5b6000612c4a848285016126ca565b91505092915050565b600060208284031215612c6557600080fd5b6000612c73848285016126df565b91505092915050565b600060208284031215612c8e57600080fd5b6000612c9c84828501612895565b91505092915050565b6000612cb183836131c9565b60208301905092915050565b6000612cc983836131e7565b60208301905092915050565b612cde81613641565b82525050565b612ced816135c3565b82525050565b612d04612cff826135c3565b6136b9565b82525050565b612d1381613545565b612d1d818461358b565b9250612d2882613530565b8060005b83811015612d59578151612d408782612ca5565b9650612d4b83613573565b925050600181019050612d2c565b505050505050565b612d6a81613545565b612d748184613596565b9250612d7f82613530565b8060005b83811015612db0578151612d978782612cbd565b9650612da283613573565b925050600181019050612d83565b505050505050565b612dc18161353a565b612dcb8184613580565b9250612dd682613526565b8060005b83811015612e07578151612dee8782612ca5565b9650612df983613566565b925050600181019050612dda565b505050505050565b612e18816135d5565b82525050565b6000612e2982613550565b612e3381856135a1565b9350612e43818560208601613686565b612e4c816136e7565b840191505092915050565b6000612e628261355b565b612e6c81856135b2565b9350612e7c818560208601613686565b612e85816136e7565b840191505092915050565b6000612e9d602b836135b2565b91507f5468652061646472657373206265696e67207472616e7366657272656420746f60008301527f20697320696e76616c69640000000000000000000000000000000000000000006020830152604082019050919050565b6000612f036027836135b2565b91507f43616c6c6572206973206e6f7420746865206f776e6572206f6620746865206360008301527f6f6e7472616374000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f696014836135b2565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000612fa96029836135b2565b91507f5468652061646472657373206f662074686520746f6b656e206f776e6572206960008301527f7320696e76616c696400000000000000000000000000000000000000000000006020830152604082019050919050565b600061300f601e836135b2565b91507f596f752061726520746865206f776e6572206f662074686520746f6b656e00006000830152602082019050919050565b600061304f6036836135b2565b91507f4f6e6c792074686520746f6b656e206f776e2063616e207472616e736665722060008301527f6f776e657273686970206f662074686520746f6b656e000000000000000000006020830152604082019050919050565b60006130b5601d836135b2565b91507f536f6c7574696f6e20766572696669636174696f6e206661696c65642e0000006000830152602082019050919050565b60006130f56016836135b2565b91507f536f6c7574696f6e206973206e6f7420756e69717565000000000000000000006000830152602082019050919050565b60408201600082015161313e60008501826131c9565b50602082015161315160208501826131c9565b50505050565b60808201600082015161316d6000850182612db8565b5060208201516131806040850182612db8565b50505050565b6101008201600082015161319d6000850182613128565b5060208201516131b06040850182613157565b5060408201516131c360c0850182613128565b50505050565b6131d281613637565b82525050565b6131e181613637565b82525050565b6131f081613637565b82525050565b61320761320282613637565b6136dd565b82525050565b60006132198286612cf3565b60148201915061322982856131f6565b6020820191506132398284612d61565b604082019150819050949350505050565b600060208201905061325f6000830184612ce4565b92915050565b600060808201905061327a6000830187612cd5565b6132876020830186612ce4565b61329460408301856131d8565b81810360608301526132a68184612e1e565b905095945050505050565b60006040820190506132c66000830185612ce4565b6132d360208301846131d8565b9392505050565b60006020820190506132ef6000830184612e0f565b92915050565b6000602082019050818103600083015261330f8184612e57565b905092915050565b6000602082019050818103600083015261333081612e90565b9050919050565b6000602082019050818103600083015261335081612ef6565b9050919050565b6000602082019050818103600083015261337081612f5c565b9050919050565b6000602082019050818103600083015261339081612f9c565b9050919050565b600060208201905081810360008301526133b081613002565b9050919050565b600060208201905081810360008301526133d081613042565b9050919050565b600060208201905081810360008301526133f0816130a8565b9050919050565b60006020820190508181036000830152613410816130e8565b9050919050565b60006101408201905061342d6000830185613186565b61343b610100830184612d0a565b9392505050565b600060208201905061345760008301846131d8565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561348057600080fd5b8060405250919050565b600067ffffffffffffffff8211156134a157600080fd5b602082029050919050565b600067ffffffffffffffff8211156134c357600080fd5b602082029050919050565b600067ffffffffffffffff8211156134e557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561351157600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006135ce82613617565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061364c82613653565b9050919050565b600061365e82613665565b9050919050565b600061367082613617565b9050919050565b82818337600083830152505050565b60005b838110156136a4578082015181840152602081019050613689565b838111156136b3576000848401525b50505050565b60006136c4826136cb565b9050919050565b60006136d6826136f8565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b61370e816135c3565b811461371957600080fd5b50565b613725816135d5565b811461373057600080fd5b50565b61373c816135e1565b811461374757600080fd5b50565b613753816135eb565b811461375e57600080fd5b50565b61376a81613637565b811461377557600080fd5b5056fea365627a7a72315820d711646970c841aa427deb38d9bf98e950d9638da319091baec7ceaecd9ded1c6c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806340c10f19116100de5780638da5cb5b11610097578063bdc32be011610071578063bdc32be014610458578063c87b56dd14610476578063e985e9c5146104a6578063f2fde38b146104d657610173565b80638da5cb5b14610402578063a22cb46514610420578063b88d4fde1461043c57610173565b806340c10f191461030a57806342842e0e1461033a5780634f6ccce7146103565780636352211e1461038657806370a08231146103b657806374690502146103e657610173565b806318160ddd1161013057806318160ddd1461024c5780631fd960da1461026a57806323b872dd1461028657806327dc297e146102a25780632f745c59146102be57806338bbfa50146102ee57610173565b806301ffc9a714610178578063081812fc146101a8578063095ea7b3146101d857806315070401146101f457806316c38b3c1461021257806317d7de7c1461022e575b600080fd5b610192600480360361018d9190810190612c2a565b6104f2565b60405161019f91906132da565b60405180910390f35b6101c260048036036101bd9190810190612c7c565b61055a565b6040516101cf919061324a565b60405180910390f35b6101f260048036036101ed9190810190612a15565b610597565b005b6101fc610715565b60405161020991906132f5565b60405180910390f35b61022c60048036036102279190810190612b05565b6107b7565b005b610236610914565b60405161024391906132f5565b60405180910390f35b6102546109b6565b6040516102619190613442565b60405180910390f35b610284600480360361027f9190810190612aa0565b6109c3565b005b6102a0600480360361029b919081019061290f565b610ba0565b005b6102bc60048036036102b79190810190612b57565b610bc3565b005b6102d860048036036102d39190810190612a15565b610c06565b6040516102e59190613442565b60405180910390f35b61030860048036036103039190810190612bab565b610c79565b005b610324600480360361031f9190810190612a15565b610c7e565b60405161033191906132da565b60405180910390f35b610354600480360361034f919081019061290f565b610d2c565b005b610370600480360361036b9190810190612c7c565b610d4c565b60405161037d9190613442565b60405180910390f35b6103a0600480360361039b9190810190612c7c565b610d80565b6040516103ad919061324a565b60405180910390f35b6103d060048036036103cb91908101906128aa565b610dbd565b6040516103dd9190613442565b60405180910390f35b61040060048036036103fb9190810190612a51565b610e0d565b005b61040a610f73565b604051610417919061324a565b60405180910390f35b61043a600480360361043591908101906129d9565b610f9c565b005b6104566004803603610451919081019061295e565b6110d2565b005b6104606110f8565b60405161046d91906132f5565b60405180910390f35b610490600480360361048b9190810190612c7c565b61119a565b60405161049d91906132f5565b60405180910390f35b6104c060048036036104bb91908101906128d3565b611261565b6040516104cd91906132da565b60405180910390f35b6104f060048036036104eb91908101906128aa565b6112f5565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105a282610d80565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90613397565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061065a5750600115156106568233611261565b1515145b61066357600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ad5780601f10610782576101008083540402835291602001916107ad565b820191906000526020600020905b81548152906001019060200180831161079057829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90613337565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff16156108b9573373ffffffffffffffffffffffffffffffffffffffff167f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25860405160405180910390a25b600060149054906101000a900460ff16610911573373ffffffffffffffffffffffffffffffffffffffff167f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa60405160405180910390a25b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b5050505050905090565b6000600880549050905090565b60008484836040516020016109da9392919061320d565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8e906133f7565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610af4929190613417565b60206040518083038186803b158015610b0c57600080fd5b505afa158015610b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b449190810190612b2e565b610b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7a906133d7565b60405180910390fd5b610b8e858583610e0d565b610b988585610c7e565b505050505050565b610baa338261147c565b610bb357600080fd5b610bbe838383611511565b505050565b610c02828260006040519080825280601f01601f191660200182016040528015610bfc5781602001600182028038833980820191505090505b50610c79565b5050565b6000610c1183610dbd565b8210610c1c57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c6657fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0690613337565b60405180910390fd5b610d198383611535565b610d2282611556565b6001905092915050565b610d47838383604051806020016040528060008152506110d2565b505050565b6000610d566109b6565b8210610d6157600080fd5b60088281548110610d6e57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610e06600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061163e565b9050919050565b610e1561248d565b60405180604001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481525090506014819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505050806015600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507f3a01cc868bdb36c1d9b8a262a8ad25064b23ac175b3f8e4453f1daf8ff6bac0d81600001518260200151604051610f659291906132b1565b60405180910390a150505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fd557600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110c691906132da565b60405180910390a35050565b6110dd848484610ba0565b6110e98484848461164c565b6110f257600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111905780601f1061116557610100808354040283529160200191611190565b820191906000526020600020905b81548152906001019060200180831161117357829003601f168201915b5050505050905090565b60606111a582611763565b6111ae57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112555780601f1061122a57610100808354040283529160200191611255565b820191906000526020600020905b81548152906001019060200180831161123857829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137b90613337565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113be57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a350565b60008061148883610d80565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806114f757508373ffffffffffffffffffffffffffffffffffffffff166114df8461055a565b73ffffffffffffffffffffffffffffffffffffffff16145b8061150857506115078185611261565b5b91505092915050565b61151c8383836117d5565b6115268382611a0a565b6115308282611ba8565b505050565b61153f8282611c6f565b6115498282611ba8565b61155281611e27565b5050565b61155f81611763565b61156857600080fd5b61161460118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116015780601f106115d657610100808354040283529160200191611601565b820191906000526020600020905b8154815290600101906020018083116115e457829003601f168201915b505050505061160f83611e73565b611fa0565b60126000838152602001908152602001600020908051906020019061163a9291906124bd565b5050565b600081600001549050919050565b600061166d8473ffffffffffffffffffffffffffffffffffffffff16611fe4565b61167a576001905061175b565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016116bb9493929190613265565b602060405180830381600087803b1580156116d557600080fd5b505af11580156116e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061170d9190810190612c53565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006117e082610d80565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611847906133b7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b790613317565b60405180910390fd5b6118c98261202f565b611910600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206120ed565b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119a9600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612110565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000611a626001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061212690919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611b4f576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611acf57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b2757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611ba1919061253d565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60001515611c7c82611763565b151514611cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb590613357565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2590613377565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611dc7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612110565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611ebb576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611f9b565b600082905060005b60008214611ee5578080600101915050600a8281611edd57fe5b049150611ec3565b6060816040519080825280601f01601f191660200182016040528015611f1a5781602001600182028038833980820191505090505b50905060006001830390505b60008614611f9357600a8681611f3857fe5b0660300160f81b82828060019003935081518110611f5257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611f8b57fe5b049550611f26565b819450505050505b919050565b6060611fdc8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612170565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561202657506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120ea5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6121056001826000015461212690919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061216883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612432565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156121cc5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612251578881815181106121f857fe5b602001015160f81c60f81b83838060010194508151811061221557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121e3565b600090505b87518110156122c45787818151811061226b57fe5b602001015160f81c60f81b83838060010194508151811061228857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612256565b600090505b8651811015612337578681815181106122de57fe5b602001015160f81c60f81b8383806001019450815181106122fb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122c9565b600090505b85518110156123aa5785818151811061235157fe5b602001015160f81c60f81b83838060010194508151811061236e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061233c565b600090505b845181101561241d578481815181106123c457fe5b602001015160f81c60f81b8383806001019450815181106123e157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123af565b82995050505050505050505095945050505050565b600083831115829061247a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161247191906132f5565b60405180910390fd5b5060008385039050809150509392505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124fe57805160ff191683800117855561252c565b8280016001018555821561252c579182015b8281111561252b578251825591602001919060010190612510565b5b5090506125399190612569565b5090565b815481835581811115612564578183600052602060002091820191016125639190612569565b5b505050565b61258b91905b8082111561258757600081600090555060010161256f565b5090565b90565b60008135905061259d81613705565b92915050565b600082601f8301126125b457600080fd5b60026125c76125c28261348a565b61345d565b915081838560208402820111156125dd57600080fd5b60005b8381101561260d57816125f38882612895565b8452602084019350602083019250506001810190506125e0565b5050505092915050565b600082601f83011261262857600080fd5b600261263b612636826134ac565b61345d565b9150818385602084028201111561265157600080fd5b60005b8381101561268157816126678882612895565b845260208401935060208301925050600181019050612654565b5050505092915050565b60008135905061269a8161371c565b92915050565b6000815190506126af8161371c565b92915050565b6000813590506126c481613733565b92915050565b6000813590506126d98161374a565b92915050565b6000815190506126ee8161374a565b92915050565b600082601f83011261270557600080fd5b8135612718612713826134ce565b61345d565b9150808252602083016020830185838301111561273457600080fd5b61273f838284613677565b50505092915050565b600082601f83011261275957600080fd5b813561276c612767826134fa565b61345d565b9150808252602083016020830185838301111561278857600080fd5b612793838284613677565b50505092915050565b6000604082840312156127ae57600080fd5b6127b8604061345d565b905060006127c884828501612895565b60008301525060206127dc84828501612895565b60208301525092915050565b6000608082840312156127fa57600080fd5b612804604061345d565b90506000612814848285016125a3565b6000830152506040612828848285016125a3565b60208301525092915050565b6000610100828403121561284757600080fd5b612851606061345d565b905060006128618482850161279c565b6000830152506040612875848285016127e8565b60208301525060c06128898482850161279c565b60408301525092915050565b6000813590506128a481613761565b92915050565b6000602082840312156128bc57600080fd5b60006128ca8482850161258e565b91505092915050565b600080604083850312156128e657600080fd5b60006128f48582860161258e565b92505060206129058582860161258e565b9150509250929050565b60008060006060848603121561292457600080fd5b60006129328682870161258e565b93505060206129438682870161258e565b925050604061295486828701612895565b9150509250925092565b6000806000806080858703121561297457600080fd5b60006129828782880161258e565b94505060206129938782880161258e565b93505060406129a487828801612895565b925050606085013567ffffffffffffffff8111156129c157600080fd5b6129cd878288016126f4565b91505092959194509250565b600080604083850312156129ec57600080fd5b60006129fa8582860161258e565b9250506020612a0b8582860161268b565b9150509250929050565b60008060408385031215612a2857600080fd5b6000612a368582860161258e565b9250506020612a4785828601612895565b9150509250929050565b600080600060608486031215612a6657600080fd5b6000612a748682870161258e565b9350506020612a8586828701612895565b9250506040612a96868287016126b5565b9150509250925092565b6000806000806101808587031215612ab757600080fd5b6000612ac58782880161258e565b9450506020612ad687828801612895565b9350506040612ae787828801612834565b925050610140612af987828801612617565b91505092959194509250565b600060208284031215612b1757600080fd5b6000612b258482850161268b565b91505092915050565b600060208284031215612b4057600080fd5b6000612b4e848285016126a0565b91505092915050565b60008060408385031215612b6a57600080fd5b6000612b78858286016126b5565b925050602083013567ffffffffffffffff811115612b9557600080fd5b612ba185828601612748565b9150509250929050565b600080600060608486031215612bc057600080fd5b6000612bce868287016126b5565b935050602084013567ffffffffffffffff811115612beb57600080fd5b612bf786828701612748565b925050604084013567ffffffffffffffff811115612c1457600080fd5b612c20868287016126f4565b9150509250925092565b600060208284031215612c3c57600080fd5b6000612c4a848285016126ca565b91505092915050565b600060208284031215612c6557600080fd5b6000612c73848285016126df565b91505092915050565b600060208284031215612c8e57600080fd5b6000612c9c84828501612895565b91505092915050565b6000612cb183836131c9565b60208301905092915050565b6000612cc983836131e7565b60208301905092915050565b612cde81613641565b82525050565b612ced816135c3565b82525050565b612d04612cff826135c3565b6136b9565b82525050565b612d1381613545565b612d1d818461358b565b9250612d2882613530565b8060005b83811015612d59578151612d408782612ca5565b9650612d4b83613573565b925050600181019050612d2c565b505050505050565b612d6a81613545565b612d748184613596565b9250612d7f82613530565b8060005b83811015612db0578151612d978782612cbd565b9650612da283613573565b925050600181019050612d83565b505050505050565b612dc18161353a565b612dcb8184613580565b9250612dd682613526565b8060005b83811015612e07578151612dee8782612ca5565b9650612df983613566565b925050600181019050612dda565b505050505050565b612e18816135d5565b82525050565b6000612e2982613550565b612e3381856135a1565b9350612e43818560208601613686565b612e4c816136e7565b840191505092915050565b6000612e628261355b565b612e6c81856135b2565b9350612e7c818560208601613686565b612e85816136e7565b840191505092915050565b6000612e9d602b836135b2565b91507f5468652061646472657373206265696e67207472616e7366657272656420746f60008301527f20697320696e76616c69640000000000000000000000000000000000000000006020830152604082019050919050565b6000612f036027836135b2565b91507f43616c6c6572206973206e6f7420746865206f776e6572206f6620746865206360008301527f6f6e7472616374000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f696014836135b2565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000612fa96029836135b2565b91507f5468652061646472657373206f662074686520746f6b656e206f776e6572206960008301527f7320696e76616c696400000000000000000000000000000000000000000000006020830152604082019050919050565b600061300f601e836135b2565b91507f596f752061726520746865206f776e6572206f662074686520746f6b656e00006000830152602082019050919050565b600061304f6036836135b2565b91507f4f6e6c792074686520746f6b656e206f776e2063616e207472616e736665722060008301527f6f776e657273686970206f662074686520746f6b656e000000000000000000006020830152604082019050919050565b60006130b5601d836135b2565b91507f536f6c7574696f6e20766572696669636174696f6e206661696c65642e0000006000830152602082019050919050565b60006130f56016836135b2565b91507f536f6c7574696f6e206973206e6f7420756e69717565000000000000000000006000830152602082019050919050565b60408201600082015161313e60008501826131c9565b50602082015161315160208501826131c9565b50505050565b60808201600082015161316d6000850182612db8565b5060208201516131806040850182612db8565b50505050565b6101008201600082015161319d6000850182613128565b5060208201516131b06040850182613157565b5060408201516131c360c0850182613128565b50505050565b6131d281613637565b82525050565b6131e181613637565b82525050565b6131f081613637565b82525050565b61320761320282613637565b6136dd565b82525050565b60006132198286612cf3565b60148201915061322982856131f6565b6020820191506132398284612d61565b604082019150819050949350505050565b600060208201905061325f6000830184612ce4565b92915050565b600060808201905061327a6000830187612cd5565b6132876020830186612ce4565b61329460408301856131d8565b81810360608301526132a68184612e1e565b905095945050505050565b60006040820190506132c66000830185612ce4565b6132d360208301846131d8565b9392505050565b60006020820190506132ef6000830184612e0f565b92915050565b6000602082019050818103600083015261330f8184612e57565b905092915050565b6000602082019050818103600083015261333081612e90565b9050919050565b6000602082019050818103600083015261335081612ef6565b9050919050565b6000602082019050818103600083015261337081612f5c565b9050919050565b6000602082019050818103600083015261339081612f9c565b9050919050565b600060208201905081810360008301526133b081613002565b9050919050565b600060208201905081810360008301526133d081613042565b9050919050565b600060208201905081810360008301526133f0816130a8565b9050919050565b60006020820190508181036000830152613410816130e8565b9050919050565b60006101408201905061342d6000830185613186565b61343b610100830184612d0a565b9392505050565b600060208201905061345760008301846131d8565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561348057600080fd5b8060405250919050565b600067ffffffffffffffff8211156134a157600080fd5b602082029050919050565b600067ffffffffffffffff8211156134c357600080fd5b602082029050919050565b600067ffffffffffffffff8211156134e557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561351157600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006135ce82613617565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061364c82613653565b9050919050565b600061365e82613665565b9050919050565b600061367082613617565b9050919050565b82818337600083830152505050565b60005b838110156136a4578082015181840152602081019050613689565b838111156136b3576000848401525b50505050565b60006136c4826136cb565b9050919050565b60006136d6826136f8565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b61370e816135c3565b811461371957600080fd5b50565b613725816135d5565b811461373057600080fd5b50565b61373c816135e1565b811461374757600080fd5b50565b613753816135eb565b811461375e57600080fd5b50565b61376a81613637565b811461377557600080fd5b5056fea365627a7a72315820d711646970c841aa427deb38d9bf98e950d9638da319091baec7ceaecd9ded1c6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "374:1846:3:-;;;462:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:105:3;;;;;;;;;;;;;;;;;;;;;;;;20200:284:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:10;682:6;;:19;;;;;;;;;;;;;;;;;;746:6;;;;;;;;;;;716:37;;742:1;716:37;;;;;;;;;;;;2141:5;2131:7;;:15;;;;;;;;;;;;;;;;;;2170:10;2161:20;;;;;;;;;;;;3146:40;2743:10;3165:20;;3146:18;;;:40;;:::i;:::-;5292;5166:10;5311:20;;5292:18;;;:40;;:::i;:::-;12905:51;12511:10;12924:31;;12905:18;;;:51;;:::i;:::-;20349:4;20341:5;:12;;;;;;;;;;;;:::i;:::-;;20373:6;20363:7;:16;;;;;;;;;;;;:::i;:::-;;20405:12;20389:13;:28;;;;;;;;;;;;:::i;:::-;;20428:49;20011:10;20447:29;;20428:18;;;:49;;:::i;:::-;20200:284;;;545:16:3;513:14;;:49;;;;;;;;;;;;;;;;;;462:105;374:1846;;3496:158:0;3586:10;3571:25;;:11;:25;;;;;3563:34;;;;;;3643:4;3607:20;:33;3628:11;3607:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3496:158;:::o;374:1846:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;416:91;;478:24;496:5;478:24;;;467:35;;461:46;;;;514:121;;587:42;580:5;576:54;565:65;;559:76;;;;642:117;711:24;729:5;711:24;;;704:5;701:35;691:2;;750:1;747;740:12;691:2;685:74;;374:1846:3;;;;;;;",
  "deployedSourceMap": "374:1846:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:1846:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3284:133:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6507:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5872:629;;;;;;;;;;;;;;;;:::i;:::-;;20663:90;;;:::i;:::-;;;;;;;;;;;;;;;;1833:177;;;;;;;;;;;;;;;;:::i;:::-;;20571:86;;;:::i;:::-;;;;;;;;;;;;;;;;13670:94;;;:::i;:::-;;;;;;;;;;;;;;;;1647:570:3;;;;;;;;;;;;;;;;:::i;:::-;;7651:180:0;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;;;;;;;;;;;:::i;:::-;;13336:182:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:2;;;;;;;;;;;;;;;;:::i;:::-;;22467:173:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7837:132;;;;;;;;;;;;;;;;:::i;:::-;;14101:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5636:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5345:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1087:341:3;;;;;;;;;;;;;;;;:::i;:::-;;467:77:0;;;:::i;:::-;;;;;;;;;;;;;;;;6966:213;;;;;;;;;;;;;;;;:::i;:::-;;7975:211;;;;;;;;;;;;;;;;:::i;:::-;;20759:102;;;:::i;:::-;;;;;;;;;;;;;;;;20867:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7500:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1045:325;;;;;;;;;;;;;;;;:::i;:::-;;3284:133;3354:4;3377:20;:33;3398:11;3377:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3370:40;;3284:133;;;:::o;6507:167::-;6566:7;6643:15;:24;6659:7;6643:24;;;;;;;;;;;;;;;;;;;;;6636:31;;6507:167;;;:::o;5872:629::-;5936:18;5957:16;5965:7;5957;:16::i;:::-;5936:37;;6075:10;6069:16;;:2;:16;;;;6061:59;;;;;;;;;;;;;;;;;;;;;;6254:10;6240:24;;:10;:24;;;:76;;;;6312:4;6268:48;;:40;6285:10;6297;6268:16;:40::i;:::-;:48;;;6240:76;6232:85;;;;;;6407:2;6380:15;:24;6396:7;6380:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6486:7;6482:2;6461:33;;6470:10;6461:33;;;;;;;;;;;;5872:629;;;:::o;20663:90::-;20707:13;20739:7;20732:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20663:90;:::o;1833:177::-;920:6;;;;;;;;;;;906:20;;:10;:20;;;898:72;;;;;;;;;;;;;;;;;;;;;;1902:6;1892:7;;:16;;;;;;;;;;;;;;;;;;1922:7;;;;;;;;;;;1918:36;;;1943:10;1936:18;;;;;;;;;;;;1918:36;1969:7;;;;;;;;;;;1964:39;;1992:10;1983:20;;;;;;;;;;;;1964:39;1833:177;:::o;20571:86::-;20613:13;20645:5;20638:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20571:86;:::o;13670:94::-;13714:7;13740:10;:17;;;;13733:24;;13670:94;:::o;1647:570:3:-;1811:11;1852:2;1856:7;1865:5;1835:36;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1835:36:3;;;1825:47;;;;;;1811:61;;1970:1;1934:38;;:16;:21;1951:3;1934:21;;;;;;;;;;;:24;;;;;;;;;;;;:38;;;1926:73;;;;;;;;;;;;;;;;;;;;;;2047:14;;;;;;;;;;;:23;;;2071:5;2078;2047:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2047:37:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2047:37:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2047:37:3;;;;;;;;;2039:79;;;;;;;;;;;;;;;;;;;;;;2154:29;2166:2;2170:7;2179:3;2154:11;:29::i;:::-;2189:23;2200:2;2204:7;2189:10;:23::i;:::-;;1647:570;;;;;:::o;7651:180:0:-;7741:39;7760:10;7772:7;7741:18;:39::i;:::-;7733:48;;;;;;7792:32;7806:4;7812:2;7816:7;7792:13;:32::i;:::-;7651:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;13336:182:0:-;13416:7;13451:16;13461:5;13451:9;:16::i;:::-;13443:5;:24;13435:33;;;;;;13485:12;:19;13498:5;13485:19;;;;;;;;;;;;;;;13505:5;13485:26;;;;;;;;;;;;;;;;13478:33;;13336:182;;;;:::o;14929:166:2:-;;;;:::o;22467:173:0:-;22536:4;920:6;;;;;;;;;;;906:20;;:10;:20;;;898:72;;;;;;;;;;;;;;;;;;;;;;22552:24;22564:2;22568:7;22552:11;:24::i;:::-;22586:26;22604:7;22586:17;:26::i;:::-;22629:4;22622:11;;22467:173;;;;:::o;7837:132::-;7923:39;7940:4;7946:2;7950:7;7923:39;;;;;;;;;;;;:16;:39::i;:::-;7837:132;;;:::o;14101:148::-;14159:7;14194:13;:11;:13::i;:::-;14186:5;:21;14178:30;;;;;;14225:10;14236:5;14225:17;;;;;;;;;;;;;;;;14218:24;;14101:148;;;:::o;5636:162::-;5691:7;5771:11;:20;5783:7;5771:20;;;;;;;;;;;;;;;;;;;;;5764:27;;5636:162;;;:::o;5345:285::-;5400:7;5589:34;:17;:24;5607:5;5589:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5582:41;;5345:285;;;:::o;1087:341:3:-;1163:24;;:::i;:::-;1190:38;;;;;;;;1205:2;1190:38;;;;;;1218:7;1190:38;;;1163:65;;1278:14;1298:8;1278:29;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1278:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:8;1313:16;:21;1330:3;1313:21;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:44;1393:8;:11;;;1406:8;:16;;;1379:44;;;;;;;;;;;;;;;;1087:341;;;;:::o;467:77:0:-;505:7;531:6;;;;;;;;;;;524:13;;467:77;:::o;6966:213::-;7051:10;7045:16;;:2;:16;;;;7037:25;;;;;;7109:8;7072:18;:30;7091:10;7072:30;;;;;;;;;;;;;;;:34;7103:2;7072:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7159:2;7132:40;;7147:10;7132:40;;;7163:8;7132:40;;;;;;;;;;;;;;;6966:213;;:::o;7975:211::-;8081:31;8094:4;8100:2;8104:7;8081:12;:31::i;:::-;8130:48;8153:4;8159:2;8163:7;8172:5;8130:22;:48::i;:::-;8122:57;;;;;;7975:211;;;;:::o;20759:102::-;20809:13;20841;20834:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20759:102;:::o;20867:151::-;20925:13;20958:16;20966:7;20958;:16::i;:::-;20950:25;;;;;;20992:10;:19;21003:7;20992:19;;;;;;;;;;;20985:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20867:151;;;:::o;7500:145::-;7580:4;7603:18;:25;7622:5;7603:25;;;;;;;;;;;;;;;:35;7629:8;7603:35;;;;;;;;;;;;;;;;;;;;;;;;;7596:42;;7500:145;;;;:::o;1045:325::-;920:6;;;;;;;;;;;906:20;;:10;:20;;;898:72;;;;;;;;;;;;;;;;;;;;;;1283:1;1263:22;;:8;:22;;;;1255:31;;;;;;1305:8;1296:6;;:17;;;;;;;;;;;;;;;;;;1354:8;1328:35;;1346:6;;;;;;;;;;;1328:35;;;;;;;;;;;;1045:325;:::o;8892:246::-;8977:4;8993:13;9009:16;9017:7;9009;:16::i;:::-;8993:32;;9054:5;9043:16;;:7;:16;;;:51;;;;9087:7;9063:31;;:20;9075:7;9063:11;:20::i;:::-;:31;;;9043:51;:87;;;;9098:32;9115:5;9122:7;9098:16;:32::i;:::-;9043:87;9035:96;;;8892:246;;;;:::o;14624:239::-;14709:38;14729:4;14735:2;14739:7;14709:19;:38::i;:::-;14758:47;14791:4;14797:7;14758:32;:47::i;:::-;14816:40;14844:2;14848:7;14816:27;:40::i;:::-;14624:239;;;:::o;15118:196::-;15181:24;15193:2;15197:7;15181:11;:24::i;:::-;15216:40;15244:2;15248:7;15216:27;:40::i;:::-;15267;15299:7;15267:31;:40::i;:::-;15118:196;;:::o;21494:164::-;21559:16;21567:7;21559;:16::i;:::-;21551:25;;;;;;21608:43;21618:13;21608:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21633:17;21642:7;21633:8;:17::i;:::-;21608:9;:43::i;:::-;21586:10;:19;21597:7;21586:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21494:164;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11356:347:0:-;11477:4;11502:15;:2;:13;;;:15::i;:::-;11497:58;;11540:4;11533:11;;;;11497:58;11565:13;11597:2;11581:36;;;11618:10;11630:4;11636:7;11645:5;11581:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11581:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11581:70:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11581:70:0;;;;;;;;;11565:86;;4299:10;11679:16;;11669:26;;;:6;:26;;;;11661:35;;;11356:347;;;;;;;:::o;8380:152::-;8437:4;8453:13;8469:11;:20;8481:7;8469:20;;;;;;;;;;;;;;;;;;;;;8453:36;;8523:1;8506:19;;:5;:19;;;;8499:26;;;8380:152;;;:::o;10030:798::-;10186:18;10207:16;10215:7;10207;:16::i;:::-;10186:37;;10249:10;10241:18;;:4;:18;;;10233:85;;;;;;;;;;;;;;;;;;;;;;10419:1;10405:16;;:2;:16;;;;10397:72;;;;;;;;;;;;;;;;;;;;;;10520:23;10535:7;10520:14;:23::i;:::-;10629:35;:17;:23;10647:4;10629:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10697:2;10674:11;:20;10686:7;10674:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10709:33;:17;:21;10727:2;10709:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10813:7;10809:2;10794:27;;10803:4;10794:27;;;;;;;;;;;;10030:798;;;;:::o;17090:1128::-;17352:22;17377:32;17407:1;17377:12;:18;17390:4;17377:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17352:57;;17419:18;17440:17;:26;17458:7;17440:26;;;;;;;;;;;;17419:47;;17584:14;17570:10;:28;17566:323;;17614:19;17636:12;:18;17649:4;17636:18;;;;;;;;;;;;;;;17655:14;17636:34;;;;;;;;;;;;;;;;17614:56;;17718:11;17685:12;:18;17698:4;17685:18;;;;;;;;;;;;;;;17704:10;17685:30;;;;;;;;;;;;;;;:44;;;;17834:10;17801:17;:30;17819:11;17801:30;;;;;;;;;;;:43;;;;17566:323;;17975:12;:18;17988:4;17975:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17090:1128;;;;:::o;15936:183::-;16049:12;:16;16062:2;16049:16;;;;;;;;;;;;;;;:23;;;;16020:17;:26;16038:7;16020:26;;;;;;;;;;;:52;;;;16082:12;:16;16095:2;16082:16;;;;;;;;;;;;;;;16104:7;16082:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16082:30:0;;;;;;;;;;;;;;;;;;;;;;15936:183;;:::o;9295:536::-;9470:5;9450:25;;:16;9458:7;9450;:16::i;:::-;:25;;;9442:58;;;;;;;;;;;;;;;;;;;;;;9532:1;9518:16;;:2;:16;;;;9510:70;;;;;;;;;;;;;;;;;;;;;;9694:2;9671:11;:20;9683:7;9671:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9706:33;:17;:21;9724:2;9706:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9816:7;9812:2;9791:33;;9808:1;9791:33;;;;;;;;;;;;9295:536;;:::o;16314:161::-;16417:10;:17;;;;16390:15;:24;16406:7;16390:24;;;;;;;;;;;:44;;;;16444:10;16460:7;16444:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16444:24:0;;;;;;;;;;;;;;;;;;;;;;16314:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11784:171:0:-;11883:1;11847:38;;:15;:24;11863:7;11847:24;;;;;;;;;;;;;;;;;;;;;:38;;;11843:106;;11936:1;11901:15;:24;11917:7;11901:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11843:106;11784:171;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;374:1846:3:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:616;;911:3;904:4;896:6;892:17;888:27;878:2;;929:1;926;919:12;878:2;953:4;972:78;987:62;1042:6;987:62;;;972:78;;;963:87;;1067:5;1126:6;1173:3;1165:4;1157:6;1153:17;1148:3;1144:27;1141:36;1138:2;;;1190:1;1187;1180:12;1138:2;1215:1;1200:206;1225:6;1222:1;1219:13;1200:206;;;1283:3;1305:37;1338:3;1326:10;1305:37;;;1300:3;1293:50;1366:4;1361:3;1357:14;1350:21;;1394:4;1389:3;1385:14;1378:21;;1257:149;1247:1;1244;1240:9;1235:14;;1200:206;;;1204:14;871:541;;;;;;;;1420:124;;1497:6;1484:20;1475:29;;1509:30;1533:5;1509:30;;;1469:75;;;;;1551:128;;1632:6;1626:13;1617:22;;1644:30;1668:5;1644:30;;;1611:68;;;;;1686:130;;1766:6;1753:20;1744:29;;1778:33;1805:5;1778:33;;;1738:78;;;;;1823:128;;1902:6;1889:20;1880:29;;1914:32;1940:5;1914:32;;;1874:77;;;;;1958:132;;2041:6;2035:13;2026:22;;2053:32;2079:5;2053:32;;;2020:70;;;;;2098:440;;2199:3;2192:4;2184:6;2180:17;2176:27;2166:2;;2217:1;2214;2207:12;2166:2;2254:6;2241:20;2276:64;2291:48;2332:6;2291:48;;;2276:64;;;2267:73;;2360:6;2353:5;2346:21;2396:4;2388:6;2384:17;2429:4;2422:5;2418:16;2464:3;2455:6;2450:3;2446:16;2443:25;2440:2;;;2481:1;2478;2471:12;2440:2;2491:41;2525:6;2520:3;2515;2491:41;;;2159:379;;;;;;;;2547:442;;2649:3;2642:4;2634:6;2630:17;2626:27;2616:2;;2667:1;2664;2657:12;2616:2;2704:6;2691:20;2726:65;2741:49;2783:6;2741:49;;;2726:65;;;2717:74;;2811:6;2804:5;2797:21;2847:4;2839:6;2835:17;2880:4;2873:5;2869:16;2915:3;2906:6;2901:3;2897:16;2894:25;2891:2;;;2932:1;2929;2922:12;2891:2;2942:41;2976:6;2971:3;2966;2942:41;;;2609:380;;;;;;;;3026:457;;3136:4;3124:9;3119:3;3115:19;3111:30;3108:2;;;3154:1;3151;3144:12;3108:2;3172:20;3187:4;3172:20;;;3163:29;;3239:1;3271:49;3316:3;3307:6;3296:9;3292:22;3271:49;;;3264:4;3257:5;3253:16;3246:75;3202:130;3379:2;3412:49;3457:3;3448:6;3437:9;3433:22;3412:49;;;3405:4;3398:5;3394:16;3387:75;3342:131;3102:381;;;;;3519:495;;3629:4;3617:9;3612:3;3608:19;3604:30;3601:2;;;3647:1;3644;3637:12;3601:2;3665:20;3680:4;3665:20;;;3656:29;;3732:1;3764:68;3828:3;3819:6;3808:9;3804:22;3764:68;;;3757:4;3750:5;3746:16;3739:94;3695:149;3891:2;3924:68;3988:3;3979:6;3968:9;3964:22;3924:68;;;3917:4;3910:5;3906:16;3899:94;3854:150;3595:419;;;;;4049:666;;4161:6;4149:9;4144:3;4140:19;4136:32;4133:2;;;4181:1;4178;4171:12;4133:2;4199:20;4214:4;4199:20;;;4190:29;;4266:1;4298:70;4364:3;4355:6;4344:9;4340:22;4298:70;;;4291:4;4284:5;4280:16;4273:96;4229:151;4427:2;4460:70;4526:3;4517:6;4506:9;4502:22;4460:70;;;4453:4;4446:5;4442:16;4435:96;4390:152;4589:3;4623:70;4689:3;4680:6;4669:9;4665:22;4623:70;;;4616:4;4609:5;4605:16;4598:96;4552:153;4127:588;;;;;4722:130;;4802:6;4789:20;4780:29;;4814:33;4841:5;4814:33;;;4774:78;;;;;4859:241;;4963:2;4951:9;4942:7;4938:23;4934:32;4931:2;;;4979:1;4976;4969:12;4931:2;5014:1;5031:53;5076:7;5067:6;5056:9;5052:22;5031:53;;;5021:63;;4993:97;4925:175;;;;;5107:366;;;5228:2;5216:9;5207:7;5203:23;5199:32;5196:2;;;5244:1;5241;5234:12;5196:2;5279:1;5296:53;5341:7;5332:6;5321:9;5317:22;5296:53;;;5286:63;;5258:97;5386:2;5404:53;5449:7;5440:6;5429:9;5425:22;5404:53;;;5394:63;;5365:98;5190:283;;;;;;5480:491;;;;5618:2;5606:9;5597:7;5593:23;5589:32;5586:2;;;5634:1;5631;5624:12;5586:2;5669:1;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;;;5676:63;;5648:97;5776:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;;;5784:63;;5755:98;5884:2;5902:53;5947:7;5938:6;5927:9;5923:22;5902:53;;;5892:63;;5863:98;5580:391;;;;;;5978:721;;;;;6142:3;6130:9;6121:7;6117:23;6113:33;6110:2;;;6159:1;6156;6149:12;6110:2;6194:1;6211:53;6256:7;6247:6;6236:9;6232:22;6211:53;;;6201:63;;6173:97;6301:2;6319:53;6364:7;6355:6;6344:9;6340:22;6319:53;;;6309:63;;6280:98;6409:2;6427:53;6472:7;6463:6;6452:9;6448:22;6427:53;;;6417:63;;6388:98;6545:2;6534:9;6530:18;6517:32;6569:18;6561:6;6558:30;6555:2;;;6601:1;6598;6591:12;6555:2;6621:62;6675:7;6666:6;6655:9;6651:22;6621:62;;;6611:72;;6496:193;6104:595;;;;;;;;6706:360;;;6824:2;6812:9;6803:7;6799:23;6795:32;6792:2;;;6840:1;6837;6830:12;6792:2;6875:1;6892:53;6937:7;6928:6;6917:9;6913:22;6892:53;;;6882:63;;6854:97;6982:2;7000:50;7042:7;7033:6;7022:9;7018:22;7000:50;;;6990:60;;6961:95;6786:280;;;;;;7073:366;;;7194:2;7182:9;7173:7;7169:23;7165:32;7162:2;;;7210:1;7207;7200:12;7162:2;7245:1;7262:53;7307:7;7298:6;7287:9;7283:22;7262:53;;;7252:63;;7224:97;7352:2;7370:53;7415:7;7406:6;7395:9;7391:22;7370:53;;;7360:63;;7331:98;7156:283;;;;;;7446:491;;;;7584:2;7572:9;7563:7;7559:23;7555:32;7552:2;;;7600:1;7597;7590:12;7552:2;7635:1;7652:53;7697:7;7688:6;7677:9;7673:22;7652:53;;;7642:63;;7614:97;7742:2;7760:53;7805:7;7796:6;7785:9;7781:22;7760:53;;;7750:63;;7721:98;7850:2;7868:53;7913:7;7904:6;7893:9;7889:22;7868:53;;;7858:63;;7829:98;7546:391;;;;;;7944:710;;;;;8145:3;8133:9;8124:7;8120:23;8116:33;8113:2;;;8162:1;8159;8152:12;8113:2;8197:1;8214:53;8259:7;8250:6;8239:9;8235:22;8214:53;;;8204:63;;8176:97;8304:2;8322:53;8367:7;8358:6;8347:9;8343:22;8322:53;;;8312:63;;8283:98;8412:2;8430:76;8498:7;8489:6;8478:9;8474:22;8430:76;;;8420:86;;8391:121;8543:3;8562:76;8630:7;8621:6;8610:9;8606:22;8562:76;;;8552:86;;8522:122;8107:547;;;;;;;;8661:235;;8762:2;8750:9;8741:7;8737:23;8733:32;8730:2;;;8778:1;8775;8768:12;8730:2;8813:1;8830:50;8872:7;8863:6;8852:9;8848:22;8830:50;;;8820:60;;8792:94;8724:172;;;;;8903:257;;9015:2;9003:9;8994:7;8990:23;8986:32;8983:2;;;9031:1;9028;9021:12;8983:2;9066:1;9083:61;9136:7;9127:6;9116:9;9112:22;9083:61;;;9073:71;;9045:105;8977:183;;;;;9167:472;;;9298:2;9286:9;9277:7;9273:23;9269:32;9266:2;;;9314:1;9311;9304:12;9266:2;9349:1;9366:53;9411:7;9402:6;9391:9;9387:22;9366:53;;;9356:63;;9328:97;9484:2;9473:9;9469:18;9456:32;9508:18;9500:6;9497:30;9494:2;;;9540:1;9537;9530:12;9494:2;9560:63;9615:7;9606:6;9595:9;9591:22;9560:63;;;9550:73;;9435:194;9260:379;;;;;;9646:701;;;;9803:2;9791:9;9782:7;9778:23;9774:32;9771:2;;;9819:1;9816;9809:12;9771:2;9854:1;9871:53;9916:7;9907:6;9896:9;9892:22;9871:53;;;9861:63;;9833:97;9989:2;9978:9;9974:18;9961:32;10013:18;10005:6;10002:30;9999:2;;;10045:1;10042;10035:12;9999:2;10065:63;10120:7;10111:6;10100:9;10096:22;10065:63;;;10055:73;;9940:194;10193:2;10182:9;10178:18;10165:32;10217:18;10209:6;10206:30;10203:2;;;10249:1;10246;10239:12;10203:2;10269:62;10323:7;10314:6;10303:9;10299:22;10269:62;;;10259:72;;10144:193;9765:582;;;;;;10354:239;;10457:2;10445:9;10436:7;10432:23;10428:32;10425:2;;;10473:1;10470;10463:12;10425:2;10508:1;10525:52;10569:7;10560:6;10549:9;10545:22;10525:52;;;10515:62;;10487:96;10419:174;;;;;10600:261;;10714:2;10702:9;10693:7;10689:23;10685:32;10682:2;;;10730:1;10727;10720:12;10682:2;10765:1;10782:63;10837:7;10828:6;10817:9;10813:22;10782:63;;;10772:73;;10744:107;10676:185;;;;;10868:241;;10972:2;10960:9;10951:7;10947:23;10943:32;10940:2;;;10988:1;10985;10978:12;10940:2;11023:1;11040:53;11085:7;11076:6;11065:9;11061:22;11040:53;;;11030:63;;11002:97;10934:175;;;;;11117:173;;11204:46;11246:3;11238:6;11204:46;;;11279:4;11274:3;11270:14;11256:28;;11197:93;;;;;11299:189;;11394:54;11444:3;11436:6;11394:54;;;11477:4;11472:3;11468:14;11454:28;;11387:101;;;;;11496:142;11587:45;11626:5;11587:45;;;11582:3;11575:58;11569:69;;;11645:113;11728:24;11746:5;11728:24;;;11723:3;11716:37;11710:48;;;11765:152;11866:45;11886:24;11904:5;11886:24;;;11866:45;;;11861:3;11854:58;11848:69;;;11957:660;12090:52;12136:5;12090:52;;;12155:84;12232:6;12227:3;12155:84;;;12148:91;;12260:54;12308:5;12260:54;;;12334:7;12362:1;12347:258;12372:6;12369:1;12366:13;12347:258;;;12439:6;12433:13;12460:63;12519:3;12504:13;12460:63;;;12453:70;;12540:58;12591:6;12540:58;;;12530:68;;12404:201;12394:1;12391;12387:9;12382:14;;12347:258;;;12351:14;12069:548;;;;;;12658:704;12809:52;12855:5;12809:52;;;12874:102;12969:6;12964:3;12874:102;;;12867:109;;12997:54;13045:5;12997:54;;;13071:7;13099:1;13084:266;13109:6;13106:1;13103:13;13084:266;;;13176:6;13170:13;13197:71;13264:3;13249:13;13197:71;;;13190:78;;13285:58;13336:6;13285:58;;;13275:68;;13141:209;13131:1;13128;13124:9;13119:14;;13084:266;;;13088:14;12788:574;;;;;;13403:624;13522:48;13564:5;13522:48;;;13583:74;13650:6;13645:3;13583:74;;;13576:81;;13678:50;13722:5;13678:50;;;13748:7;13776:1;13761:254;13786:6;13783:1;13780:13;13761:254;;;13853:6;13847:13;13874:63;13933:3;13918:13;13874:63;;;13867:70;;13954:54;14001:6;13954:54;;;13944:64;;13818:197;13808:1;13805;13801:9;13796:14;;13761:254;;;13765:14;13501:526;;;;;;14035:104;14112:21;14127:5;14112:21;;;14107:3;14100:34;14094:45;;;14146:343;;14256:38;14288:5;14256:38;;;14306:70;14369:6;14364:3;14306:70;;;14299:77;;14381:52;14426:6;14421:3;14414:4;14407:5;14403:16;14381:52;;;14454:29;14476:6;14454:29;;;14449:3;14445:39;14438:46;;14236:253;;;;;;14496:347;;14608:39;14641:5;14608:39;;;14659:71;14723:6;14718:3;14659:71;;;14652:78;;14735:52;14780:6;14775:3;14768:4;14761:5;14757:16;14735:52;;;14808:29;14830:6;14808:29;;;14803:3;14799:39;14792:46;;14588:255;;;;;;14851:380;;15011:67;15075:2;15070:3;15011:67;;;15004:74;;15111:34;15107:1;15102:3;15098:11;15091:55;15180:13;15175:2;15170:3;15166:12;15159:35;15222:2;15217:3;15213:12;15206:19;;14997:234;;;;15240:376;;15400:67;15464:2;15459:3;15400:67;;;15393:74;;15500:34;15496:1;15491:3;15487:11;15480:55;15569:9;15564:2;15559:3;15555:12;15548:31;15607:2;15602:3;15598:12;15591:19;;15386:230;;;;15625:320;;15785:67;15849:2;15844:3;15785:67;;;15778:74;;15885:22;15881:1;15876:3;15872:11;15865:43;15936:2;15931:3;15927:12;15920:19;;15771:174;;;;15954:378;;16114:67;16178:2;16173:3;16114:67;;;16107:74;;16214:34;16210:1;16205:3;16201:11;16194:55;16283:11;16278:2;16273:3;16269:12;16262:33;16323:2;16318:3;16314:12;16307:19;;16100:232;;;;16341:330;;16501:67;16565:2;16560:3;16501:67;;;16494:74;;16601:32;16597:1;16592:3;16588:11;16581:53;16662:2;16657:3;16653:12;16646:19;;16487:184;;;;16680:391;;16840:67;16904:2;16899:3;16840:67;;;16833:74;;16940:34;16936:1;16931:3;16927:11;16920:55;17009:24;17004:2;16999:3;16995:12;16988:46;17062:2;17057:3;17053:12;17046:19;;16826:245;;;;17080:329;;17240:67;17304:2;17299:3;17240:67;;;17233:74;;17340:31;17336:1;17331:3;17327:11;17320:52;17400:2;17395:3;17391:12;17384:19;;17226:183;;;;17418:322;;17578:67;17642:2;17637:3;17578:67;;;17571:74;;17678:24;17674:1;17669:3;17665:11;17658:45;17731:2;17726:3;17722:12;17715:19;;17564:176;;;;17803:456;17932:4;17927:3;17923:14;18012:4;18005:5;18001:16;17995:23;18024:63;18081:4;18076:3;18072:14;18058:12;18024:63;;;17952:141;18163:4;18156:5;18152:16;18146:23;18175:63;18232:4;18227:3;18223:14;18209:12;18175:63;;;18103:141;17905:354;;;;18321:540;18450:4;18445:3;18441:14;18530:4;18523:5;18519:16;18513:23;18542:105;18641:4;18636:3;18632:14;18618:12;18542:105;;;18470:183;18723:4;18716:5;18712:16;18706:23;18735:105;18834:4;18829:3;18825:14;18811:12;18735:105;;;18663:183;18423:438;;;;18921:757;19060:6;19055:3;19051:16;19142:4;19135:5;19131:16;19125:23;19154:109;19257:4;19252:3;19248:14;19234:12;19154:109;;;19082:187;19339:4;19332:5;19328:16;19322:23;19351:109;19454:4;19449:3;19445:14;19431:12;19351:109;;;19279:187;19536:4;19529:5;19525:16;19519:23;19548:109;19651:4;19646:3;19642:14;19628:12;19548:109;;;19476:187;19033:645;;;;19685:103;19758:24;19776:5;19758:24;;;19753:3;19746:37;19740:48;;;19795:113;19878:24;19896:5;19878:24;;;19873:3;19866:37;19860:48;;;19915:111;19996:24;20014:5;19996:24;;;19991:3;19984:37;19978:48;;;20033:152;20134:45;20154:24;20172:5;20154:24;;;20134:45;;;20129:3;20122:58;20116:69;;;20192:614;;20413:75;20484:3;20475:6;20413:75;;;20510:2;20505:3;20501:12;20494:19;;20524:75;20595:3;20586:6;20524:75;;;20621:2;20616:3;20612:12;20605:19;;20635:121;20752:3;20743:6;20635:121;;;20778:2;20773:3;20769:12;20762:19;;20798:3;20791:10;;20401:405;;;;;;;20813:213;;20931:2;20920:9;20916:18;20908:26;;20945:71;21013:1;21002:9;20998:17;20989:6;20945:71;;;20902:124;;;;;21033:647;;21261:3;21250:9;21246:19;21238:27;;21276:79;21352:1;21341:9;21337:17;21328:6;21276:79;;;21366:72;21434:2;21423:9;21419:18;21410:6;21366:72;;;21449;21517:2;21506:9;21502:18;21493:6;21449:72;;;21569:9;21563:4;21559:20;21554:2;21543:9;21539:18;21532:48;21594:76;21665:4;21656:6;21594:76;;;21586:84;;21232:448;;;;;;;;21687:324;;21833:2;21822:9;21818:18;21810:26;;21847:71;21915:1;21904:9;21900:17;21891:6;21847:71;;;21929:72;21997:2;21986:9;21982:18;21973:6;21929:72;;;21804:207;;;;;;22018:201;;22130:2;22119:9;22115:18;22107:26;;22144:65;22206:1;22195:9;22191:17;22182:6;22144:65;;;22101:118;;;;;22226:301;;22364:2;22353:9;22349:18;22341:26;;22414:9;22408:4;22404:20;22400:1;22389:9;22385:17;22378:47;22439:78;22512:4;22503:6;22439:78;;;22431:86;;22335:192;;;;;22534:407;;22725:2;22714:9;22710:18;22702:26;;22775:9;22769:4;22765:20;22761:1;22750:9;22746:17;22739:47;22800:131;22926:4;22800:131;;;22792:139;;22696:245;;;;22948:407;;23139:2;23128:9;23124:18;23116:26;;23189:9;23183:4;23179:20;23175:1;23164:9;23160:17;23153:47;23214:131;23340:4;23214:131;;;23206:139;;23110:245;;;;23362:407;;23553:2;23542:9;23538:18;23530:26;;23603:9;23597:4;23593:20;23589:1;23578:9;23574:17;23567:47;23628:131;23754:4;23628:131;;;23620:139;;23524:245;;;;23776:407;;23967:2;23956:9;23952:18;23944:26;;24017:9;24011:4;24007:20;24003:1;23992:9;23988:17;23981:47;24042:131;24168:4;24042:131;;;24034:139;;23938:245;;;;24190:407;;24381:2;24370:9;24366:18;24358:26;;24431:9;24425:4;24421:20;24417:1;24406:9;24402:17;24395:47;24456:131;24582:4;24456:131;;;24448:139;;24352:245;;;;24604:407;;24795:2;24784:9;24780:18;24772:26;;24845:9;24839:4;24835:20;24831:1;24820:9;24816:17;24809:47;24870:131;24996:4;24870:131;;;24862:139;;24766:245;;;;25018:407;;25209:2;25198:9;25194:18;25186:26;;25259:9;25253:4;25249:20;25245:1;25234:9;25230:17;25223:47;25284:131;25410:4;25284:131;;;25276:139;;25180:245;;;;25432:407;;25623:2;25612:9;25608:18;25600:26;;25673:9;25667:4;25663:20;25659:1;25648:9;25644:17;25637:47;25698:131;25824:4;25698:131;;;25690:139;;25594:245;;;;25846:510;;26084:3;26073:9;26069:19;26061:27;;26099:117;26213:1;26202:9;26198:17;26189:6;26099:117;;;26227:119;26341:3;26330:9;26326:19;26317:6;26227:119;;;26055:301;;;;;;26363:213;;26481:2;26470:9;26466:18;26458:26;;26495:71;26563:1;26552:9;26548:17;26539:6;26495:71;;;26452:124;;;;;26583:256;;26645:2;26639:9;26629:19;;26683:4;26675:6;26671:17;26782:6;26770:10;26767:22;26746:18;26734:10;26731:34;26728:62;26725:2;;;26803:1;26800;26793:12;26725:2;26823:10;26819:2;26812:22;26623:216;;;;;26846:240;;26999:18;26991:6;26988:30;26985:2;;;27031:1;27028;27021:12;26985:2;27066:4;27058:6;27054:17;27046:25;;26922:164;;;;27093:244;;27250:18;27242:6;27239:30;27236:2;;;27282:1;27279;27272:12;27236:2;27317:4;27309:6;27305:17;27297:25;;27173:164;;;;27344:321;;27487:18;27479:6;27476:30;27473:2;;;27519:1;27516;27509:12;27473:2;27586:4;27582:9;27575:4;27567:6;27563:17;27559:33;27551:41;;27650:4;27644;27640:15;27632:23;;27410:255;;;;27672:322;;27816:18;27808:6;27805:30;27802:2;;;27848:1;27845;27838:12;27802:2;27915:4;27911:9;27904:4;27896:6;27892:17;27888:33;27880:41;;27979:4;27973;27969:15;27961:23;;27739:255;;;;28001:93;;28081:3;28073:11;;28067:27;;;;28101:97;;28185:3;28177:11;;28171:27;;;;28205:104;;28295:4;28285:14;;28273:36;;;;28316:108;;28410:4;28400:14;;28388:36;;;;28431:121;;28524:5;28518:12;28508:22;;28489:63;;;;28559:122;;28653:5;28647:12;28637:22;;28618:63;;;;28688:102;;28780:4;28775:3;28771:14;28763:22;;28757:33;;;;28797:106;;28893:4;28888:3;28884:14;28876:22;;28870:33;;;;28911:130;;29032:3;29017:18;;29010:31;;;;;29050:140;;29181:3;29166:18;;29159:31;;;;;29199:158;;29348:3;29333:18;;29326:31;;;;;29366:162;;29480:6;29475:3;29468:19;29517:4;29512:3;29508:14;29493:29;;29461:67;;;;;29537:163;;29652:6;29647:3;29640:19;29689:4;29684:3;29680:14;29665:29;;29633:67;;;;;29708:91;;29770:24;29788:5;29770:24;;;29759:35;;29753:46;;;;29806:85;;29879:5;29872:13;29865:21;29854:32;;29848:43;;;;29898:72;;29960:5;29949:16;;29943:27;;;;29977:144;;30049:66;30042:5;30038:78;30027:89;;30021:100;;;;30128:121;;30201:42;30194:5;30190:54;30179:65;;30173:76;;;;30256:72;;30318:5;30307:16;;30301:27;;;;30335:129;;30422:37;30453:5;30422:37;;;30409:50;;30403:61;;;;30471:121;;30550:37;30581:5;30550:37;;;30537:50;;30531:61;;;;30599:108;;30678:24;30696:5;30678:24;;;30665:37;;30659:48;;;;30715:145;30796:6;30791:3;30786;30773:30;30852:1;30843:6;30838:3;30834:16;30827:27;30766:94;;;;30869:268;30934:1;30941:101;30955:6;30952:1;30949:13;30941:101;;;31031:1;31026:3;31022:11;31016:18;31012:1;31007:3;31003:11;30996:39;30977:2;30974:1;30970:10;30965:15;;30941:101;;;31057:6;31054:1;31051:13;31048:2;;;31122:1;31113:6;31108:3;31104:16;31097:27;31048:2;30918:219;;;;;31145:95;;31209:26;31229:5;31209:26;;;31198:37;;31192:48;;;;31247:89;;31311:20;31325:5;31311:20;;;31300:31;;31294:42;;;;31343:74;;31407:5;31396:16;;31390:27;;;;31424:97;;31512:2;31508:7;31503:2;31496:5;31492:14;31488:28;31478:38;;31472:49;;;;31529:94;;31607:5;31603:2;31599:14;31577:36;;31571:52;;;;31631:117;31700:24;31718:5;31700:24;;;31693:5;31690:35;31680:2;;31739:1;31736;31729:12;31680:2;31674:74;;31755:111;31821:21;31836:5;31821:21;;;31814:5;31811:32;31801:2;;31857:1;31854;31847:12;31801:2;31795:71;;31873:117;31942:24;31960:5;31942:24;;;31935:5;31932:35;31922:2;;31981:1;31978;31971:12;31922:2;31916:74;;31997:115;32065:23;32082:5;32065:23;;;32058:5;32055:34;32045:2;;32103:1;32100;32093:12;32045:2;32039:73;;32119:117;32188:24;32206:5;32188:24;;;32181:5;32178:35;32168:2;;32227:1;32224;32217:12;32168:2;32162:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721Mintable.sol\";\nimport \"./verifier.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\ncontract SquareVerifier is Verifier {}\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token {\n\n  SquareVerifier squareVerifier;\n\n  constructor(address verifierContract) public {\n    squareVerifier = SquareVerifier(verifierContract);\n  }\n\n  // TODO define a solutions struct that can hold an index & an address\n  struct Solution {\n    address to;\n    uint256 tokenId;\n  }\n\n  // TODO define an array of the above struct\n  Solution[] solutionsArray;\n\n  // TODO define a mapping to store unique solutions submitted\n  mapping(bytes32 => Solution) solutionsMapping;\n\n  // TODO Create an event to emit when a solution is added\n  event SolutionAdded(address to, uint256 tokenId);\n\n  // TODO Create a function to add the solutions to the array and emit the event\n  function addSolution(address to, uint256 tokenId, bytes32 key) public {\n    Solution memory solution = Solution({ to: to, tokenId: tokenId });\n\n    // Add solution to the data structures\n    solutionsArray.push(solution);\n    solutionsMapping[key] = solution;\n\n    // Emit the event\n    emit SolutionAdded(solution.to, solution.tokenId);\n  }\n\n  // TODO Create a function to mint new NFT only after the solution has been verified\n  //  - make sure the solution is unique (has not been used before)\n  //  - make sure you handle metadata as well as tokenSupply\n  function mintNFT(address to, uint256 tokenId, SquareVerifier.Proof memory proof, uint[2] memory input) public {\n    \n    // Generate hash to be used as the key\n    bytes32 key = keccak256(abi.encodePacked(to, tokenId, input));\n\n    // Check that key has not been used before\n    require(solutionsMapping[key].to == address(0), \"Solution is not unique\");\n\n    // Verify the proof provided\n    require(squareVerifier.verifyTx(proof, input), \"Solution verification failed.\");    \n\n    // Add solution\n    \n    addSolution(to, tokenId, key);\n    super.mint(to, tokenId);\n  }\n\n}\n\n",
  "sourcePath": "/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7598
      ],
      "SquareVerifier": [
        7468
      ]
    },
    "id": 7599,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7462,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7463,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7464,
        "nodeType": "ImportDirective",
        "scope": 7599,
        "sourceUnit": 1136,
        "src": "68:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7465,
        "nodeType": "ImportDirective",
        "scope": 7599,
        "sourceUnit": 10077,
        "src": "99:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7466,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10076,
              "src": "259:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10076",
                "typeString": "contract Verifier"
              }
            },
            "id": 7467,
            "nodeType": "InheritanceSpecifier",
            "src": "259:8:3"
          }
        ],
        "contractDependencies": [
          10076
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7468,
        "linearizedBaseContracts": [
          7468,
          10076
        ],
        "name": "SquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7599,
        "src": "232:38:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7469,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1135,
              "src": "405:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1135",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7470,
            "nodeType": "InheritanceSpecifier",
            "src": "405:17:3"
          }
        ],
        "contractDependencies": [
          76,
          151,
          197,
          689,
          987,
          1096,
          1135,
          7460
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7598,
        "linearizedBaseContracts": [
          7598,
          1135,
          1096,
          7460,
          987,
          689,
          197,
          151,
          76
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7472,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7598,
            "src": "428:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SquareVerifier_$7468",
              "typeString": "contract SquareVerifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7471,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7468,
              "src": "428:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$7468",
                "typeString": "contract SquareVerifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7483,
              "nodeType": "Block",
              "src": "507:60:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7477,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7472,
                      "src": "513:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$7468",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7479,
                          "name": "verifierContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7474,
                          "src": "545:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7478,
                        "name": "SquareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7468,
                        "src": "530:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SquareVerifier_$7468_$",
                          "typeString": "type(contract SquareVerifier)"
                        }
                      },
                      "id": 7480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "530:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$7468",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "src": "513:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SquareVerifier_$7468",
                      "typeString": "contract SquareVerifier"
                    }
                  },
                  "id": 7482,
                  "nodeType": "ExpressionStatement",
                  "src": "513:49:3"
                }
              ]
            },
            "documentation": null,
            "id": 7484,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7474,
                  "name": "verifierContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 7484,
                  "src": "474:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "473:26:3"
            },
            "returnParameters": {
              "id": 7476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:0:3"
            },
            "scope": 7598,
            "src": "462:105:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7489,
            "members": [
              {
                "constant": false,
                "id": 7486,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 7489,
                "src": "665:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7485,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "665:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7488,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7489,
                "src": "681:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7487,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "681:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7598,
            "src": "643:58:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7492,
            "name": "solutionsArray",
            "nodeType": "VariableDeclaration",
            "scope": 7598,
            "src": "751:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7489_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7490,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7489,
                "src": "751:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7489_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7491,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "751:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7489_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7496,
            "name": "solutionsMapping",
            "nodeType": "VariableDeclaration",
            "scope": 7598,
            "src": "844:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7495,
              "keyType": {
                "id": 7493,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "852:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "844:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7494,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7489,
                "src": "863:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7489_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7502,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7498,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "973:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7500,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "985:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "972:29:3"
            },
            "src": "953:49:3"
          },
          {
            "body": {
              "id": 7537,
              "nodeType": "Block",
              "src": "1157:271:3",
              "statements": [
                {
                  "assignments": [
                    7512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7512,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7537,
                      "src": "1163:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7489_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7511,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7489,
                        "src": "1163:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7489_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7517,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7514,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7504,
                        "src": "1205:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7515,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "1218:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7513,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7489,
                      "src": "1190:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7489_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "to",
                      "tokenId"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1190:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7489_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1163:65:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7521,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7512,
                        "src": "1298:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7489_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7489_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7518,
                        "name": "solutionsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7492,
                        "src": "1278:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7489_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1278:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7489_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7523,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7524,
                        "name": "solutionsMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7496,
                        "src": "1313:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7526,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7525,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7508,
                        "src": "1330:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1313:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7489_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7527,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7512,
                      "src": "1337:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7489_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1313:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7489_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7529,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:32:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7531,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7512,
                          "src": "1393:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7489_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7532,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "to",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7486,
                        "src": "1393:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7533,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7512,
                          "src": "1406:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7489_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7534,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7488,
                        "src": "1406:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7530,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7502,
                      "src": "1379:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7536,
                  "nodeType": "EmitStatement",
                  "src": "1374:49:3"
                }
              ]
            },
            "documentation": null,
            "id": 7538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7504,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7538,
                  "src": "1108:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7506,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7538,
                  "src": "1120:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7508,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7538,
                  "src": "1137:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7507,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1137:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1107:42:3"
            },
            "returnParameters": {
              "id": 7510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1157:0:3"
            },
            "scope": 7598,
            "src": "1087:341:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7596,
              "nodeType": "Block",
              "src": "1757:460:3",
              "statements": [
                {
                  "assignments": [
                    7552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7552,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7596,
                      "src": "1811:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7551,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1811:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7561,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7556,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7540,
                            "src": "1852:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7557,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7542,
                            "src": "1856:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7558,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7548,
                            "src": "1865:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7554,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10405,
                            "src": "1835:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1835:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1835:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7553,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10412,
                      "src": "1825:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1811:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7563,
                              "name": "solutionsMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7496,
                              "src": "1934:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7565,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7564,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7552,
                              "src": "1951:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1934:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7489_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7566,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7486,
                          "src": "1934:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1970:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1962:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1962:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1934:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1974:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        },
                        "value": "Solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        }
                      ],
                      "id": 7562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10421,
                        10422
                      ],
                      "referencedDeclaration": 10422,
                      "src": "1926:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7573,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:73:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7577,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7544,
                            "src": "2071:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$9750_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7578,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7548,
                            "src": "2078:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$9750_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7575,
                            "name": "squareVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7472,
                            "src": "2047:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SquareVerifier_$7468",
                              "typeString": "contract SquareVerifier"
                            }
                          },
                          "id": 7576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10075,
                          "src": "2047:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$9750_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2047:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20766572696669636174696f6e206661696c65642e",
                        "id": 7580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2086:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1fd521987e276de59bf623885ce131131ab48049d3b821a60efb1d9bb378c22",
                          "typeString": "literal_string \"Solution verification failed.\""
                        },
                        "value": "Solution verification failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1fd521987e276de59bf623885ce131131ab48049d3b821a60efb1d9bb378c22",
                          "typeString": "literal_string \"Solution verification failed.\""
                        }
                      ],
                      "id": 7574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10421,
                        10422
                      ],
                      "referencedDeclaration": 10422,
                      "src": "2039:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7582,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7584,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7540,
                        "src": "2166:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7585,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7542,
                        "src": "2170:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7586,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7552,
                        "src": "2179:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7583,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7538,
                      "src": "2154:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 7587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7588,
                  "nodeType": "ExpressionStatement",
                  "src": "2154:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7592,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7540,
                        "src": "2200:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7593,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7542,
                        "src": "2204:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7589,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10477,
                        "src": "2189:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7598",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1134,
                      "src": "2189:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7595,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7540,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7597,
                  "src": "1664:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7542,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7597,
                  "src": "1676:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7544,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7597,
                  "src": "1693:33:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$9750_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7543,
                    "name": "SquareVerifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9750,
                    "src": "1693:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$9750_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7548,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7597,
                  "src": "1728:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7545,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1728:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7547,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1733:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1728:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:86:3"
            },
            "returnParameters": {
              "id": 7550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1757:0:3"
            },
            "scope": 7598,
            "src": "1647:570:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7599,
        "src": "374:1846:3"
      }
    ],
    "src": "0:2222:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7598
        ],
        "SquareVerifier": [
          7468
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7462,
        "name": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7463,
        "name": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "attributes": {
          "SourceUnit": 1136,
          "absolutePath": "/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7464,
        "name": "ImportDirective",
        "src": "68:30:3"
      },
      {
        "attributes": {
          "SourceUnit": 10077,
          "absolutePath": "/Users/antoniocunanan/Desktop/udacity/capstone/submission/Blockchain-Capstone/eth-contracts/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7465,
        "name": "ImportDirective",
        "src": "99:24:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            10076
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7468,
            10076
          ],
          "name": "SquareVerifier",
          "nodes": [
            null
          ],
          "scope": 7599
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10076,
                  "type": "contract Verifier"
                },
                "id": 7466,
                "name": "UserDefinedTypeName",
                "src": "259:8:3"
              }
            ],
            "id": 7467,
            "name": "InheritanceSpecifier",
            "src": "259:8:3"
          }
        ],
        "id": 7468,
        "name": "ContractDefinition",
        "src": "232:38:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            76,
            151,
            197,
            689,
            987,
            1096,
            1135,
            7460
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7598,
            1135,
            1096,
            7460,
            987,
            689,
            197,
            151,
            76
          ],
          "name": "SolnSquareVerifier",
          "scope": 7599
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1135,
                  "type": "contract CustomERC721Token"
                },
                "id": 7469,
                "name": "UserDefinedTypeName",
                "src": "405:17:3"
              }
            ],
            "id": 7470,
            "name": "InheritanceSpecifier",
            "src": "405:17:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "squareVerifier",
              "scope": 7598,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract SquareVerifier",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SquareVerifier",
                  "referencedDeclaration": 7468,
                  "type": "contract SquareVerifier"
                },
                "id": 7471,
                "name": "UserDefinedTypeName",
                "src": "428:14:3"
              }
            ],
            "id": 7472,
            "name": "VariableDeclaration",
            "src": "428:29:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7598,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierContract",
                      "scope": 7484,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7473,
                        "name": "ElementaryTypeName",
                        "src": "474:7:3"
                      }
                    ],
                    "id": 7474,
                    "name": "VariableDeclaration",
                    "src": "474:24:3"
                  }
                ],
                "id": 7475,
                "name": "ParameterList",
                "src": "473:26:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7476,
                "name": "ParameterList",
                "src": "507:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract SquareVerifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7472,
                              "type": "contract SquareVerifier",
                              "value": "squareVerifier"
                            },
                            "id": 7477,
                            "name": "Identifier",
                            "src": "513:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract SquareVerifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7468,
                                  "type": "type(contract SquareVerifier)",
                                  "value": "SquareVerifier"
                                },
                                "id": 7478,
                                "name": "Identifier",
                                "src": "530:14:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7474,
                                  "type": "address",
                                  "value": "verifierContract"
                                },
                                "id": 7479,
                                "name": "Identifier",
                                "src": "545:16:3"
                              }
                            ],
                            "id": 7480,
                            "name": "FunctionCall",
                            "src": "530:32:3"
                          }
                        ],
                        "id": 7481,
                        "name": "Assignment",
                        "src": "513:49:3"
                      }
                    ],
                    "id": 7482,
                    "name": "ExpressionStatement",
                    "src": "513:49:3"
                  }
                ],
                "id": 7483,
                "name": "Block",
                "src": "507:60:3"
              }
            ],
            "id": 7484,
            "name": "FunctionDefinition",
            "src": "462:105:3"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7598,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "to",
                  "scope": 7489,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7485,
                    "name": "ElementaryTypeName",
                    "src": "665:7:3"
                  }
                ],
                "id": 7486,
                "name": "VariableDeclaration",
                "src": "665:10:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "tokenId",
                  "scope": 7489,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7487,
                    "name": "ElementaryTypeName",
                    "src": "681:7:3"
                  }
                ],
                "id": 7488,
                "name": "VariableDeclaration",
                "src": "681:15:3"
              }
            ],
            "id": 7489,
            "name": "StructDefinition",
            "src": "643:58:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionsArray",
              "scope": 7598,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7489,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7490,
                    "name": "UserDefinedTypeName",
                    "src": "751:8:3"
                  }
                ],
                "id": 7491,
                "name": "ArrayTypeName",
                "src": "751:10:3"
              }
            ],
            "id": 7492,
            "name": "VariableDeclaration",
            "src": "751:25:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionsMapping",
              "scope": 7598,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7493,
                    "name": "ElementaryTypeName",
                    "src": "852:7:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7489,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7494,
                    "name": "UserDefinedTypeName",
                    "src": "863:8:3"
                  }
                ],
                "id": 7495,
                "name": "Mapping",
                "src": "844:28:3"
              }
            ],
            "id": 7496,
            "name": "VariableDeclaration",
            "src": "844:45:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "to",
                      "scope": 7502,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7497,
                        "name": "ElementaryTypeName",
                        "src": "973:7:3"
                      }
                    ],
                    "id": 7498,
                    "name": "VariableDeclaration",
                    "src": "973:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "tokenId",
                      "scope": 7502,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7499,
                        "name": "ElementaryTypeName",
                        "src": "985:7:3"
                      }
                    ],
                    "id": 7500,
                    "name": "VariableDeclaration",
                    "src": "985:15:3"
                  }
                ],
                "id": 7501,
                "name": "ParameterList",
                "src": "972:29:3"
              }
            ],
            "id": 7502,
            "name": "EventDefinition",
            "src": "953:49:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7598,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7538,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7503,
                        "name": "ElementaryTypeName",
                        "src": "1108:7:3"
                      }
                    ],
                    "id": 7504,
                    "name": "VariableDeclaration",
                    "src": "1108:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7538,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7505,
                        "name": "ElementaryTypeName",
                        "src": "1120:7:3"
                      }
                    ],
                    "id": 7506,
                    "name": "VariableDeclaration",
                    "src": "1120:15:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
                      "scope": 7538,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7507,
                        "name": "ElementaryTypeName",
                        "src": "1137:7:3"
                      }
                    ],
                    "id": 7508,
                    "name": "VariableDeclaration",
                    "src": "1137:11:3"
                  }
                ],
                "id": 7509,
                "name": "ParameterList",
                "src": "1107:42:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7510,
                "name": "ParameterList",
                "src": "1157:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7512
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7537,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7489,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7511,
                            "name": "UserDefinedTypeName",
                            "src": "1163:8:3"
                          }
                        ],
                        "id": 7512,
                        "name": "VariableDeclaration",
                        "src": "1163:24:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "to",
                            "tokenId"
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7489,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7513,
                            "name": "Identifier",
                            "src": "1190:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7504,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7514,
                            "name": "Identifier",
                            "src": "1205:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7506,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7515,
                            "name": "Identifier",
                            "src": "1218:7:3"
                          }
                        ],
                        "id": 7516,
                        "name": "FunctionCall",
                        "src": "1190:38:3"
                      }
                    ],
                    "id": 7517,
                    "name": "VariableDeclarationStatement",
                    "src": "1163:65:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7489_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7492,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutionsArray"
                                },
                                "id": 7518,
                                "name": "Identifier",
                                "src": "1278:14:3"
                              }
                            ],
                            "id": 7520,
                            "name": "MemberAccess",
                            "src": "1278:19:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7512,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7521,
                            "name": "Identifier",
                            "src": "1298:8:3"
                          }
                        ],
                        "id": 7522,
                        "name": "FunctionCall",
                        "src": "1278:29:3"
                      }
                    ],
                    "id": 7523,
                    "name": "ExpressionStatement",
                    "src": "1278:29:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7496,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutionsMapping"
                                },
                                "id": 7524,
                                "name": "Identifier",
                                "src": "1313:16:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7508,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7525,
                                "name": "Identifier",
                                "src": "1330:3:3"
                              }
                            ],
                            "id": 7526,
                            "name": "IndexAccess",
                            "src": "1313:21:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7512,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7527,
                            "name": "Identifier",
                            "src": "1337:8:3"
                          }
                        ],
                        "id": 7528,
                        "name": "Assignment",
                        "src": "1313:32:3"
                      }
                    ],
                    "id": 7529,
                    "name": "ExpressionStatement",
                    "src": "1313:32:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7502,
                              "type": "function (address,uint256)",
                              "value": "SolutionAdded"
                            },
                            "id": 7530,
                            "name": "Identifier",
                            "src": "1379:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "to",
                              "referencedDeclaration": 7486,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7512,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "solution"
                                },
                                "id": 7531,
                                "name": "Identifier",
                                "src": "1393:8:3"
                              }
                            ],
                            "id": 7532,
                            "name": "MemberAccess",
                            "src": "1393:11:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "tokenId",
                              "referencedDeclaration": 7488,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7512,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "solution"
                                },
                                "id": 7533,
                                "name": "Identifier",
                                "src": "1406:8:3"
                              }
                            ],
                            "id": 7534,
                            "name": "MemberAccess",
                            "src": "1406:16:3"
                          }
                        ],
                        "id": 7535,
                        "name": "FunctionCall",
                        "src": "1379:44:3"
                      }
                    ],
                    "id": 7536,
                    "name": "EmitStatement",
                    "src": "1374:49:3"
                  }
                ],
                "id": 7537,
                "name": "Block",
                "src": "1157:271:3"
              }
            ],
            "id": 7538,
            "name": "FunctionDefinition",
            "src": "1087:341:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNFT",
              "scope": 7598,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7539,
                        "name": "ElementaryTypeName",
                        "src": "1664:7:3"
                      }
                    ],
                    "id": 7540,
                    "name": "VariableDeclaration",
                    "src": "1664:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7541,
                        "name": "ElementaryTypeName",
                        "src": "1676:7:3"
                      }
                    ],
                    "id": 7542,
                    "name": "VariableDeclaration",
                    "src": "1676:15:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7597,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "SquareVerifier.Proof",
                          "referencedDeclaration": 9750,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7543,
                        "name": "UserDefinedTypeName",
                        "src": "1693:20:3"
                      }
                    ],
                    "id": 7544,
                    "name": "VariableDeclaration",
                    "src": "1693:33:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7597,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7545,
                            "name": "ElementaryTypeName",
                            "src": "1728:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7546,
                            "name": "Literal",
                            "src": "1733:1:3"
                          }
                        ],
                        "id": 7547,
                        "name": "ArrayTypeName",
                        "src": "1728:7:3"
                      }
                    ],
                    "id": 7548,
                    "name": "VariableDeclaration",
                    "src": "1728:20:3"
                  }
                ],
                "id": 7549,
                "name": "ParameterList",
                "src": "1663:86:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7550,
                "name": "ParameterList",
                "src": "1757:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7552
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7596,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7551,
                            "name": "ElementaryTypeName",
                            "src": "1811:7:3"
                          }
                        ],
                        "id": 7552,
                        "name": "VariableDeclaration",
                        "src": "1811:11:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10412,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7553,
                            "name": "Identifier",
                            "src": "1825:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10405,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7554,
                                    "name": "Identifier",
                                    "src": "1835:3:3"
                                  }
                                ],
                                "id": 7555,
                                "name": "MemberAccess",
                                "src": "1835:16:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7540,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 7556,
                                "name": "Identifier",
                                "src": "1852:2:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7542,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 7557,
                                "name": "Identifier",
                                "src": "1856:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7548,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7558,
                                "name": "Identifier",
                                "src": "1865:5:3"
                              }
                            ],
                            "id": 7559,
                            "name": "FunctionCall",
                            "src": "1835:36:3"
                          }
                        ],
                        "id": 7560,
                        "name": "FunctionCall",
                        "src": "1825:47:3"
                      }
                    ],
                    "id": 7561,
                    "name": "VariableDeclarationStatement",
                    "src": "1811:61:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                                  "typeString": "literal_string \"Solution is not unique\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10421,
                                10422
                              ],
                              "referencedDeclaration": 10422,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7562,
                            "name": "Identifier",
                            "src": "1926:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "to",
                                  "referencedDeclaration": 7486,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7496,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "solutionsMapping"
                                        },
                                        "id": 7563,
                                        "name": "Identifier",
                                        "src": "1934:16:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7552,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7564,
                                        "name": "Identifier",
                                        "src": "1951:3:3"
                                      }
                                    ],
                                    "id": 7565,
                                    "name": "IndexAccess",
                                    "src": "1934:21:3"
                                  }
                                ],
                                "id": 7566,
                                "name": "MemberAccess",
                                "src": "1934:24:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7567,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1962:7:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7568,
                                    "name": "Literal",
                                    "src": "1970:1:3"
                                  }
                                ],
                                "id": 7569,
                                "name": "FunctionCall",
                                "src": "1962:10:3"
                              }
                            ],
                            "id": 7570,
                            "name": "BinaryOperation",
                            "src": "1934:38:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e206973206e6f7420756e69717565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is not unique\"",
                              "value": "Solution is not unique"
                            },
                            "id": 7571,
                            "name": "Literal",
                            "src": "1974:24:3"
                          }
                        ],
                        "id": 7572,
                        "name": "FunctionCall",
                        "src": "1926:73:3"
                      }
                    ],
                    "id": 7573,
                    "name": "ExpressionStatement",
                    "src": "1926:73:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e1fd521987e276de59bf623885ce131131ab48049d3b821a60efb1d9bb378c22",
                                  "typeString": "literal_string \"Solution verification failed.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10421,
                                10422
                              ],
                              "referencedDeclaration": 10422,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7574,
                            "name": "Identifier",
                            "src": "2039:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$9750_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 10075,
                                  "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7472,
                                      "type": "contract SquareVerifier",
                                      "value": "squareVerifier"
                                    },
                                    "id": 7575,
                                    "name": "Identifier",
                                    "src": "2047:14:3"
                                  }
                                ],
                                "id": 7576,
                                "name": "MemberAccess",
                                "src": "2047:23:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7544,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7577,
                                "name": "Identifier",
                                "src": "2071:5:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7548,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7578,
                                "name": "Identifier",
                                "src": "2078:5:3"
                              }
                            ],
                            "id": 7579,
                            "name": "FunctionCall",
                            "src": "2047:37:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20766572696669636174696f6e206661696c65642e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution verification failed.\"",
                              "value": "Solution verification failed."
                            },
                            "id": 7580,
                            "name": "Literal",
                            "src": "2086:31:3"
                          }
                        ],
                        "id": 7581,
                        "name": "FunctionCall",
                        "src": "2039:79:3"
                      }
                    ],
                    "id": 7582,
                    "name": "ExpressionStatement",
                    "src": "2039:79:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7538,
                              "type": "function (address,uint256,bytes32)",
                              "value": "addSolution"
                            },
                            "id": 7583,
                            "name": "Identifier",
                            "src": "2154:11:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7540,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7584,
                            "name": "Identifier",
                            "src": "2166:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7542,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7585,
                            "name": "Identifier",
                            "src": "2170:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7552,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7586,
                            "name": "Identifier",
                            "src": "2179:3:3"
                          }
                        ],
                        "id": 7587,
                        "name": "FunctionCall",
                        "src": "2154:29:3"
                      }
                    ],
                    "id": 7588,
                    "name": "ExpressionStatement",
                    "src": "2154:29:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1134,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10477,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7589,
                                "name": "Identifier",
                                "src": "2189:5:3"
                              }
                            ],
                            "id": 7591,
                            "name": "MemberAccess",
                            "src": "2189:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7540,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7592,
                            "name": "Identifier",
                            "src": "2200:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7542,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7593,
                            "name": "Identifier",
                            "src": "2204:7:3"
                          }
                        ],
                        "id": 7594,
                        "name": "FunctionCall",
                        "src": "2189:23:3"
                      }
                    ],
                    "id": 7595,
                    "name": "ExpressionStatement",
                    "src": "2189:23:3"
                  }
                ],
                "id": 7596,
                "name": "Block",
                "src": "1757:460:3"
              }
            ],
            "id": 7597,
            "name": "FunctionDefinition",
            "src": "1647:570:3"
          }
        ],
        "id": 7598,
        "name": "ContractDefinition",
        "src": "374:1846:3"
      }
    ],
    "id": 7599,
    "name": "SourceUnit",
    "src": "0:2222:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x3a01cc868bdb36c1d9b8a262a8ad25064b23ac175b3f8e4453f1daf8ff6bac0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "TransferOwnership",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "caller",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2f8212Ca2F6c947611ef342Aa231c6eFEd84684F",
      "transactionHash": "0xe958b069a2b35cdb43e243847f9b915aeaf576b5ab96519a6ee7a28dc4aadd05"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-28T20:03:21.725Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}